https://amangoel.quora.com/Build-a-solid-career-in-tech-without-a-CS-major 
build
solid
career
tech
without
cs
major
aman
goel
alice
nd
year
material
science
metallurgical
engineering
student
iit
bombay

she
worked
hard
jee
preparation

ended
screwing
jee

she
secured
rank
around


she
middle
class
family
wanted
opt
computer
science
build
career
tech
support
family
make
parents
proud

however

jee
counselling

able
narrow
choices
following

choose
cs
tier

college
choose
iit
bombay
material
science
metallurgical
engineering
since
heard
lot
iit
bombay

ended
choosing
iit
bombay
material
sciences

however

soon
courses
first
year

realized

like
stream
rather
wants
build
career
tech

she
also
realizes
impossible
get
branch
changed
computer
science
competition
stiff
meagre

pointer
way
cutoff


now
stuck

low
grades
a
branch

like
can
pursue
love
programming
worried
jobs
placements
end
undergrad
are
also
someone
like
alice

did
also
choose
branch
sake
getting
better
college

are
middle
class
family
want
use
undergrad
build
solid
career
tech
support
family

are
one
lost
hope
career
tech
first
year
undergrad

if
answer
questions

yes


i
surprise

read

let
talk
bit

i
fourth
year
computer
science
engineering
undergrad
iit
bombay

i
spent

excellent
years
iit
bombay
i

months
i
graduate

this
place
excellent

full
smart
people

this
place
given
lot

i
student

place
made
engineer

i
feel
like
i
owe
lot
college

i
always
seen
people
complain
branch

this
i
hear
quite
often
friends
branches

i
always
wanted
study
computer
science

ah

top

rankers
get

i

even
top


my
branch
extremely
boring

most
cramming

it
sucks

i
wish
i
could
go
back
choose
computer
science
tier

college

why
hell
i
choose
branch

there
common
behavior
among
people

wanted
study
cs

could

jee
rank
culprit

what
surprising
utilize
gazillions
programming
resources
available
internet
claim
make
programmer

then
i
word
i
got
know
confused

below
common
questions

how
i
proceed
ahead

should
i
learn
web
development

should
i
try
android
app
development

what
programming
language
i
learn

how
many
programming
languages
i
learn

how
make
website

should
i
try
freelancing

i
close
contact
friend
mine
situation
similar
alice

let
us
call
friend
bob

bob
fed
branch

his
aim
go
industry
earn
money
make
parents
proud

since
i
computer
science
background

i
tried
helping
bob
within

years

bob

boasts

hired
software
engineer
decent
tech
company
twice
average
package
iitian

no
doubt

bob
grabbed
highest
package
department
people
average
package
software
engineering
internship
mumbai
based
startup
end
third
year
today

bob
happy
looking
forward
life
ahead
successful
software
engineer

he
happy
earn
enough
support
family

plenty
sources
internet
claim
teach
programming

fact
none
gives
proper
roadmap
non
cs
students
find
really
hard
figure
done
first
done
later

they
end
picking
difficult
topic
give
easily

for
instance

bob
wanted
try
android
app
development
nd
year
gave

understand
even
basics

in
blog
post

i
want
target
people
like
alice
bob
want
create
resource
help
every
non
cs
student
build
career
software
engineer

my
vision
writing
blog
post
every
student
right
learn
computer
programming
right
way

every
student
enough
resources
help
herhim
build
career
software
engineer

enough
context

let
us
begin


i
assuming
probably
ndrdth
year
undergrad
noncs
department

looking
building
career
software
engineer

i
assume
done
basic
programming
course

typically
compulsory
colleges

this
means
aware
least
one
programming
languages

c

c

java

python

first
bit
motivation

the
demand
software
engineers
india
high
new
startups

demand
certainly
increase

the
starting
salaries
software
engineers
india
typically
twice
salary
streams

if
tier

college

expect
even

some
famous
person
said

best
investment
today

era
teach
program

let
us
talk
exactly
approach
achieve
goal
becoming
software
engineer

rd
semester
by
end
first
year

would
certainly
completed
basic
programming
course

for
rd
sem

aim
course
probability
statistics

almost
colleges
offer
courses
enroll
course
offered
institute

you
choose
sit
course

but
definitely
take
probability
class
early
curriculum

i
heard
course
offered
mit
ocw
quite
good

taking
probability
class
also
help
reinforce
linear
algebra
concepts
important
many
cs
courses

rd
semester
take
following

courses

data
structures
algorithms
discrete
mathematics
data
structures
algorithms
course
without
proceed
ahead
computer
science

it
fundamental
course
every
student
must
take
one
course

this
course
slightly
hard

it
highly
technical
even
best
students
get
bowled
challenging
data
structures
algorithms
problems
thrown

this
course
literally
test
patience

patient

if
able
complete
course



closer
goal

discrete
mathematics
course
teaches
mathematics
computer
science

you
studying
mathematical
induction

combinatorics
stuff

here
resources
i
would
strongly
recommend

algorithms

part
i

princeton
university

coursera

this
excellent
course

the
course
taught
java

if

know
java


okay

spend
considerable
time
understanding
professor
teaching
try
implement
whichever
programming
language
know

mathematics
computer
science

this
course
offered
mit
known
quite
good

recommended
books

for
data
structures
algorithms

i
would
recommend
book
suggested
robert
sedgewick

the
recommended
book
cormen

slightly
involved
contains
rigorous
mathematics
might
appreciate

for
discrete
mathematics

i
would
recommend
kenneth
rosen

excellent
book

keep
mind

write
much
code

unless
write
code


learn

try
implement
everything
learn
data
structures
class

summer
break
nd
year
use
summer
break
hone
programming
skills

head
link

sphere
online
judge

spoj


spoj
online
judge

what

spoj
archive
problems
solved
writing
code

consider
simple
problem

spojcom

problem
test

you
need
take
input
user
user
enters




stop
soon
get


now

observe
solve

solution
test
c

basically

programming
judges
strict
submission
guidelines

don

print

enter
number


want
take
number
input

it

work
way

you
submit
code
without
printing
crap

just
print
specified
problem
statement

read
sample
test
cases
get
idea

do
google
search
understand
online
judges
work

solve
first

problems
link
i
gave

trust

become
coding
ninja

you
better
cs
friends
programming

no

i
lying



problems

big
goal

try
solving

per
day
done

months
depending
speed

spend
time

if
unable
get
solution

try
harder

read
comments
get
hints

use
google
search
get
hints

after
trying

minutes


get
solution

try
searching
solution
google


spoj
x
solution

x
problem
code

your
goal
learn
write
code

learn
implementations
common
algorithms

learn
usage
stl

after
solved
first

problems
spoj

i
would
also
recommend
taking
look
getting
started
sport
programming

this
doc
help
understand
things
better

th
semester
during
th
th
semester

start
searching
internships
take
end
third
year

however

side
task

primary
task
th
semester

learn
web
development
learn
android
app
development
you
get
least

projects
resume
end
th
semester


web
development
projects

android
app
development
project
our
first
task
would
learn
django

what

it
python
based
web
development
framework

why
learn

django
high
demand
among
indian
startups
days

also

easy
learn

how
i
learn

head
straight
link

django
girls
tutorial

don

sad
name
boy

nothing
sexist


this
one
best
django
tutorials

spend
week

time
understanding

spend
time
understanding
django
works

model

view

controller
architecture

if
follow
tutorial
religiously

achieved

things

you
understand
basics
web
development
django
you
picked
basics
python
you
decent
project
write
resume
once
done
django
girls
tutorial

next
thing
try
build
django
app

i
suggestions

build
photo
gallery
app

take
hash
tag
user
use
twitterapi
gather
images
hash
tag
photo
gallery

this
might
helpful

amangoeliitbphotogallerywebapplication
a
simple
banking
application

try
making
customer
employee
account

a
student
dashboard
shows
performance
student

oh
ya

i
forgot
tell

make
github
account

github

social
network

programmers

people
upload
source
codes
github

there
also
something
called

git


version
management
system

take
short
course
git

how
use
version
control
git

github

udacity

by
way

git
worth
learning
put
resume

there
another
important
thing
i
forgot
tell

stackoverflow

as
programmer
bound
face
errors
exceptions

what

there
extremely
simple
technique
deal
errors

copy
damn
error

paste
search
bar
hit
enter

viola

open
first

links
get
google
search

with
high
probability

someone
already
faced
error
got
written
solution
stackoverflow

stackoverflow
links
generally
reliable
expect
give
right
answer

be
patient

read
try

your
code
might
break

but

okay

use
undo

but

afraid
breaking
things
else

learn

cool

know
web
development

python

awesome
projects
resume

let
us
move
android
app
development

here
steps
follow

head
link

android

udacity

udacity
platform
big
tech
companies
offer
courses
take
learn
various
skills
software
engineering

google
built
excellent
android
courses
udacity
definitely
take
look

start
beginner
level
courses

they
simple
might
get
completed
day
two

you
spend
least

hours
day
courses

once
done
beginner
level
courses

take
intermediate
level
courses

of
course

free
ones

there
need
spend
money
coursenanodegree

learning
programming
free
everyone


android
might
slightly
frustrating

the
java
used
android
slightly
different
usual
java
sense
advanced
lot
library
functions

don

get
bogged

remember

need
software
engineers

we
software
engineers
known
solve
problems


as

i
would
suggest
use
google
search
heavily
errors

be
patient
android
slightly
hard

at
end

would

things
resume

android
app
development
java
an
android
app
based
project
with
much
resume

sure
get
internship

th
semester
in
semester

get
serious
internship


got
one
yet


anyway

pointers
internship

angellist
excellent
platform
startups
looking
interns

make
angellist
account
add
projects
skills

you
sure
gather
attention
startups
awesome
android
web
development
skills

search
internship
portals

be
active
linkedin

start
preparing
interviews

the
way
hiring
computer
science
works
shortlisted
interviews
based
resume

during
interviews

asked
data
structures
algorithms
based
problems

the
level
problems
would
similar
spoj
happy
hard
work
finally
pay

i
would
recommend
continuing
spoj
practice

it
easier
lose
skills
pick
skills

to
prepare
interviews

use
following

excellent
sources

cracking
coding
interview

book
bible
programming
interviews

purchase
download
pdf

piracy
bad


try
reading
theory
solve
problems

try
actually
implement
solutions

coding
interview
questions

this
brilliant
platform
hone
interview
skills

geeksforgeeks

great
programming
blogarchive

also

i
would
suggest
prepared
questions
th
semester
projects

you
able
explain
code
wrote

interviewer
might
ask
specific
library
used

don

worry

high
level
idea
able
explain

no
one
ask
syntax

that
internships

besides
internship

try
taking
miscellaneous
courses
like

machine
learning

machine
learning

stanford
university

coursera
intro
machine
learning
course

udacity
cryptography

applied
cryptography
encryption
class
online

udacity
these
courses
help
put

projects
resume
also
expand
cs
knowledge

no
doubt
also
open
internship
domains

dataml
engineer
intern
security
engineer
intern
summers
end
rd
year
enjoy
internship

work
hard
try
get
return
offer
th
semester
prepare
hard
placements
sem

the
following
topics
asked
placements

data
structures
algorithms

standard
bread
butter
cs
probability

school
level
probstats
questions

these
easy
databases
operating
systems

yet
talk
since
cs
department

lot
companies

open
placements

but

worry

quite
companies
would
willing
take
worked
hard
past

years

aim
specifically
webandroid
dev
positions

these
easy
grab

now
let
us
talk
databases
operating
systems

os


databases

django
web
app

would
used
sqlitemysqlpostgres
database

a
database
special
kind
data
structure
stores
data
hard
disk

some
companies
like
ask
databases
related
questions
candidates

being
non
cs
student

course

expected
formal
databases
course



big
plus
though



search
databases
interview
questions
get
basic
idea
asked

i
guess
i
leave
point
open
ended
time

would
become
smart
enough
figure


operating
systems

pretty
much
applies
well

doing
quick
google
search
operating
systems
interview
questions
give
enough
practice
problems
fine
interviews

if
interested

take
online
courses
databases
os

stanford
databases
intro
relational
databases

udacity
introduction
operating
systems

udacity
having
said

keep
mind
data
structures
algorithms
something
important
placements
interviewbit
one
place
spend
maximum
time

if
followed
points
seriously
worked
hard

years

trust

hard
work
pay

you
sure
bag
decent
package
placements

bob
placed
right
day


he
one
department
got
placed
first
week

and
package
twice
average
package
iitian

th
semester
during
semester

multiple
options

if
got
job

chill

if

got
job
yet

unlikely


consider
applying
startups
angellist

the
startups
angellist
actively
looking
full
time
hires

take
projects

continue
take
courses
continue
working
various
projects

here
brilliant
resource

students

guide
technical
development

google
careers
intern
remotely
startup


angellist
comes
rescue

you
keep
course
load
lesser
rather
remote
internship
startup

this
give
experience

also
work
hard

might
end
another
job
offer

i
guess
i
wrote
lot
i
concluding

in
end

i
would
like
add
basic
pointers
specific
cs

cs
easy
provided
understand
need
implement
stuff

write
actual
code

otherwise

able
learn
things

don

afraid
try
new
things

don

think

oh
hard

meant
experts

no

nothing
meant
experts

all
takes

minutes
sincere
reading
i
guarantee
nothing
pickup

don

afraid
breaking
things

don

think

oh
machine
might
break
i

at

might
end
broken
software

easily
fixed

it
unlikely
damage
hardware

learn
friends

you
amazed
see
smart
people
around
learn
lot
interacting
others

good
luck
best
future
career


views


upvotes

posted
feb

